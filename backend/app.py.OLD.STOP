from flask import Flask, jsonify
from flask_executor import Executor
from flask_shell2http import Shell2HTTP

import os
import requests

# Flask application instance
app = Flask(__name__)

executor = Executor(app)
shell2http = Shell2HTTP(app=app, executor=executor, base_url_prefix="/commands/")

def my_callback_fn(context, future):
  # optional user-defined callback function
  print(context, future.result())

# Cmd echo route
shell2http.register_command(endpoint="regcmd-saythis", command_name="echo", callback_fn=my_callback_fn, decorators=[])

# Cmd echo route
shell2http.register_command(endpoint="regcmd-magento-cloud",
                            command_name="MAGENTO_CLOUD_CLI_TOKEN=" + os.environ.get("MAGENTO_CLOUD_CLI_TOKEN") + " magento-cloud",
                            callback_fn=my_callback_fn,
                            decorators=[])

# Default route
@app.route('/', methods=['GET'])
def index():
    return jsonify({'appname': 'DemoShellToHttp',
                    'status': 'ok'})

# Health route
@app.route('/ping', methods=['GET'])
def ping():
    return 'pong!!!'

# Saythis route
@app.route('/saythis', methods=['GET'])
def say_this():
    # You can also add a timeout if you want, default value is 3600 seconds
    data = {"args": ["Hello", "World", "from", "magcloudy", "!!!"], "timeout": 60}
    resp = requests.post("http://localhost:5000/commands/regcmd-saythis", json=data)
    return resp.json()

# Magento-Cloud route
@app.route('/magento-cloud', methods=['GET'])
def magento_cloud():
    # You can also add a timeout if you want, default value is 3600 seconds
    data = {"args": ["-v"], "timeout": 60}
    resp = requests.post("http://localhost:5000/commands/regcmd-magento-cloud", json=data)
    return resp.json()


if __name__ == '__main__':
    # run app in debug mode on port 5000
    app.run(debug=True, port=5000, host='0.0.0.0')
